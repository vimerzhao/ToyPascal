package practice.backend;

import practice.intermediate.ICode;
import practice.intermediate.SymTab;
import practice.message.*;

/**
 * <h1>Backend</h1>
 * <p>The framework class that represents the back end component.</p>
 */
public abstract class Backend implements MessageProducer {
    // Message handler delegate.
    protected static MessageHandler messageHandler;

    static {
        messageHandler = new MessageHandler();
    }

    protected SymTab symTab;    // symbol table
    protected ICode iCode;      // intermediate code

    /**
     * Process the intermediate code and the symbol table generated by
     * the parser.To be implemented by a compiler or an interpreter subclass.
     *
     * @param iCode the intermediate code.
     * @param symTab the symbol table.
     * @throws Exception if an error occurred.
     */
    public abstract void process(ICode iCode, SymTab symTab) throws Exception;
}
